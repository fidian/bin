#!/bin/bash

cd "${0%/*}"

# Detect BSD (Mac OS X)
ls --color=auto > /dev/null 2>&1

if [ $? -ne 0 ]; then
    GNU="false"
else
    GNU="true"
fi

if $GNU; then
    BASH_FILE=~/.bashrc
else
    BASH_FILE=~/.bash_profile
fi

grep ". '$(pwd)/conf/bashrc'" "${BASH_FILE}" > /dev/null 2>&1

if [[ $? -ne 0 ]]; then
    echo ". '$(pwd)/conf/bashrc'" >> "${BASH_FILE}"
fi

for F in gitmessage putty vim vimrc XCompose xsession; do
    rm -rf ~/.$F
    ln -s "$(pwd)/conf/$F" ~/.$F
done

for F in npmrc; do
    if [[ -h ~/."$F" ]]; then
        rm ~/."$F"
    fi
done

# Install fonts
if $GNU; then
    rm -rf ~/.fonts
    ln -s "$(pwd)/conf/fonts" ~/.fonts
else
    find conf/fonts -type f -iname \*.ttf -exec cp \{\} ~/Library/Fonts \;
fi

# Setup SSH configuration and keys
if [ ! -d ~/.ssh ]; then
    mkdir ~/.ssh
    chmod 700 ~/.ssh
fi

rm -rf ~/.ssh/authorized_keys
cat ssh/*.pub > ~/.ssh/authorized_keys
chmod 600 ~/.ssh/authorized_keys

for F in config; do
    if [[ -f "$HOME/.ssh/$F" ]]; then
        mv "$HOME/.ssh/$F" "$HOME/.ssh/${F}.old";
    fi

    cp "ssh/$F" "$HOME/.ssh/$F"
    chmod 600 "$HOME/.ssh/$F"
done

# Setup git configuration
if [[ ! -f ~/.gitconfig ]]; then
    git config --global user.name "Tyler Akins"
    git config --global user.email "fidian@rumkin.com"
    git config --global push.default simple
    git config --global color.diff auto
    git config --global color.interactive auto
    git config --global alias.unpushed "log @{u}.. --pretty=format:'%h %an %s'"
    git config --global merge.conflictstyle diff3
    git config --global user.signingkey 8F3B8C432F4393BD
    git config --global commit.gpgsign true
    git config --global commit.template "~/.gitmessage"
fi

# Install node modules if npm exists
if hash npm &> /dev/null; then
    npm run clean
    npm install
fi
