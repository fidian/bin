#!/bin/bash -e
#
# Encrypt/decrypt secrets

cd "${0%/*}"

MODE="DECRYPT"
PASS=""

help_message() {
	echo "Usage:"
	echo ""
	echo "    ${0##*/} [options] <secret_name>"
	echo ""
	echo "Options:"
	echo "    -d           Switch to decryption mode (default)"
	echo "    -e           Switch to encryption mode"
	echo "    -h           This help message"
	echo "    -p password  Specify a password for openssl (prompts otherwise)"
	echo ""
	echo "Examples:"
	echo "    ${0##*/} -e -p 'there is no spoon' matrix"
    echo "        This encrypts data from stdin and saves it with the name of 'matrix'"
	echo "    ${0##*/} matrix -p 'there is no spoon'"
	echo "        Displays the secret stored with the name of 'matrix'"
}

parse_arguments() {
	while getopts ":dehp:" OPT; do
		case $OPT in
			d)
				MODE="DECRYPT"
				;;

			e)
				MODE="ENCRYPT"
				;;

			h)
				help_message
				exit
				;;

			p)
				PASS="$OPTARG"
				;;

			\?)
				echo "Unknown option: -$OPTARG"
				;;

			:)
				echo "Missing parameter for option:  -$OPTARG"
				;;
		esac
	done
}

while [ $OPTIND -le $# ]; do
	parse_arguments ${!OPTIND+"$@"}

	if [ $OPTIND -le $# ]; then
		if [ ! -z "$SECRET_NAME" ]; then
			echo "Only one secret name can be specified at a time."
			exit
		fi

		SECRET_NAME=${!OPTIND}
		OPTIND=$(($OPTIND + 1))

		if [ -z "$SECRET_NAME" ]; then
			echo "Please do not specify empty secret names.  That's just mean."
			exit
		fi
	fi
done

if [ -z "$SECRET_NAME" ]; then
	help_message
	exit
fi

VAULT="encrypted/$SECRET_NAME"

if [ "$MODE" = "DECRYPT" ]; then
	if [ ! -f "$VAULT" ]; then
		echo "No secret named $SECRET_NAME"
		exit
	fi
else
	if [ -f "$VAULT" ]; then
		read -p "Overwrite file?  [y/N]  " OVERWRITE

		if [ "${OVERWRITE:0:1}" != "Y" ] && [ "${OVERWRITE:0:1}" != "y" ]; then
			exit
		fi
	fi
fi

while [ -z "$PASS" ]; do
	read -p "Password (hidden):  " -s PASS
	echo "" > /dev/stderr
done

export PASS

if [ "$MODE" = "ENCRYPT" ]; then
	cat | openssl des3 -salt -pass env:PASS -in "/dev/stdin" -out "$VAULT"
	RETURNED="$?"
else
	openssl des3 -d -salt -pass env:PASS -in "$VAULT"
	RETURNED="$?"
fi

exit $RETURNED
