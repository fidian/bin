#!/bin/bash

# Immediately stop on any command that fails
set -e

# Get our current ref
REF=$(git symbolic-ref HEAD)

# Get just the branch
HEAD=${REF#refs/heads/}

# Determine the remote
REMOTE=$(git config branch.$HEAD.remote || echo "")

if [ -z "$REMOTE" ]; then
	echo "No remote is set for this branch.  Perhaps you should push it first?"
	echo ""
	echo "    git push -u origin $HEAD"
	exit
fi

REMOTE_REF=$(git config branch.$HEAD.merge)
REMOTE_BRANCH=${REMOTE_REF#refs/heads/}

# Update history
echo "Fetching history from $REMOTE."
git fetch

# Check if we can just pull because we have no changes
if [ "$(git merge-base $REMOTE/$REMOTE_BRANCH HEAD)" == "$(git rev-parse HEAD)" ]; then
	# No local changes - use a standard merge (fast-forward)
	git merge --ff $REMOTE/$REMOTE_BRANCH
elif git rebase $REMOTE/$REMOTE_BRANCH; then
    # Rebase successful
	git push
else
	echo ""
	echo "Falling back to a merge."
	git rebase --abort || git checkout $HEAD

	if git merge $REMOTE/$REMOTE_BRANCH; then
		git push
	else
		echo ""
		echo "Resolve merge conflicts, commit, then sync again."
	fi
fi
